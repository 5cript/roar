name: Deploy Docs

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: awalsh128/cache-apt-pkgs-action@v1.3.0
      with:
        packages: libcurl4-openssl-dev libcrypto++-dev ninja-build

    - name: Install boost
      uses: MarkusJx/install-boost@v2.4.1
      id: install-boost
      with:
        # REQUIRED: Specify the required boost version
        # A list of supported versions can be found here:
        # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
        boost_version: 1.81.0
        # OPTIONAL: Specify a platform version
        platform_version: 22.04

    - name: Set up Python3
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Sphinx packages
      run: |
        pip install sphinx sphinx_rtd_theme sphinx_rtd_dark_mode myst-parser

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build/clang_debug -G"Ninja" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_FLAGS="-stdlib=libc++" -DROAR_BUILD_DOCUMENTATION=on -DCMAKE_CXX_EXTENSIONS=on -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_LINKER=lld -DCMAKE_CXX_STANDARD=20
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build/clang_debug --config ${{env.BUILD_TYPE}} --target documentation doxygen

    - name: Install rsync
      run: sudo apt-get install rsync -y

    - name: Deploy Docs
      run: ${{ github.workspace }}/scripts/publish_docs.sh
